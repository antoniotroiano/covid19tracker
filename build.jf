#!/usr/bin/env groovy

pipeline {
    agent none
    stages {
        stage('checkout project') {
            agent any
            steps {
                git branch: 'master', credentialsId: 'GitCredentials', url: 'https://github.com/antoniotroiano/statistics.git'
            }
        }
        stage('build artifact + tests') {
            agent any
            steps {
                script{
                    docker.image('maven:3.6.3-jdk-11-slim').inside{
                        sh 'pwd'
                        sh 'mvn -v'
                        sh 'mvn clean'
                        sh 'mvn -B -DskipTests clean package'
                    }
                }
            }
            post {
                always {
                    junit allowEmptyResults: true, testResults: '**/test-results/*.xml'
                }
            }
        }
        stage('connect to server') {
            agent any
            steps {
                sshagent(credentials: ['ssh-key-corona']) {
                    sh 'scp -o StrictHostKeyChecking=no scripts/docker-start.sh scripts/docker-stop.sh Dockerfile ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com:app/'
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com sh ./app/docker-stop.sh'
                    sh 'scp -o StrictHostKeyChecking=no target/*.jar ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com:app/'
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com sh ./app/docker-start.sh'
                }
            }
        }
    }
}