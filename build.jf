#!/usr/bin/env groovy

pipeline {
    agent none
    stages {
        stage('checkout project') {
            agent any
            steps {
                git branch: 'master', credentialsId: 'GitCredentials', url: 'https://github.com/antoniotroiano/statistics.git'
            }
        }
        stage('build artifact + tests') {
            agent {
                docker {
                    image 'maven:3.6.3-jdk-11-slim'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                withMaven(
                        maven: 'Maven 3.6.x') {
                    sh 'mvn -B -DskipTests clean package'
                    sh 'mvn test'
                }
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('connect to server') {
            agent any
            steps {
                sshagent(credentials: ['ssh-key-corona']) {
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com'
                    sh 'scp -o StrictHostKeyChecking=no -i target/*.jar ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com:app/'
                    echo 'Test output'
                }
            }
        }
    }
}
pipeline {
        stage('Connect to server / run docker') {
            steps {
                sshagent(credentials: ['aws-key']) {
                    sh 'scp -o StrictHostKeyChecking=no -i $aws-key target/statistics-corona-*.jar scripts/docker.sh Dockerfile ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com:app/'
                    sh 'ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-122-233-6.eu-central-1.compute.amazonaws.com'
                    sh ''
                }
            }
        }
    }
}